{"version":3,"sources":["views/Banner/Banner.js","views/Media/allmedia.module.css","views/Media/Library.js","views/Banner/Banner.module.css"],"names":["Banner","props","useState","allMainCategoryServerSide","setAllMainCategoryServerSide","allSubCategoryServerSide","setAllSubCategoryServerSide","allSubSubCategoryServerSide","setAllSubSubCategoryServerSide","Maincategory","setMaincategory","Subcategory","setSubcategory","SubSubcategory","setSubSubcategory","image","setImage","setCatId","submitBannerLoading","setSubmitBannerLoading","success","setSuccess","check","setCheck","allbaners","setAllbaners","status","setStatus","toggleSuccess","e","useEffect","axios","url","method","data","query","variables","page","limit","mainCategory","hasParent","catId","then","res","getAllCategory","catch","err","console","log","getAllBaner","className","xs","row","md","htmlFor","type","name","id","value","onChange","target","map","item","_id","key","index","Classes","addFile","block","color","onClick","length","src","process","dir","alt","style","width","marginRight","size","idForServer","tempImage","imageId","default","addbaner","message","toast","errro","responsive","hover","copyItems","filter","banerId","deleteBaner","error","handleDelete","addImage","copyImage","push","module","exports","Library","images","arrayHolder","setArrayHolder","loading","setLoading","search","setSearch","getAllMultimedia","checked","isOpen","toggle","addonType","placeholder","event","itemData","toLowerCase","searchData","indexOf","ModalAllMediaSection","animation","ModalMediaSection","alldata","newData","changeStatus","checkBox"],"mappings":"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","file":"static/js/56.1dc27b18.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n  CardFooter,\r\n  Button,\r\n  Input,\r\n  FormGroup,\r\n  Label,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"reactstrap/lib/Spinner\";\r\nimport Classes from \"./Banner.module.css\";\r\nimport Library from \"../Media/Library\";\r\n\r\nconst Banner = (props) => {\r\n  const [allMainCategoryServerSide, setAllMainCategoryServerSide] = useState(\r\n    []\r\n  );\r\n  const [allSubCategoryServerSide, setAllSubCategoryServerSide] = useState([]);\r\n  const [allSubSubCategoryServerSide, setAllSubSubCategoryServerSide] =\r\n    useState([]);\r\n\r\n  const [Maincategory, setMaincategory] = useState(\"\");\r\n  const [Subcategory, setSubcategory] = useState(\"\");\r\n  const [SubSubcategory, setSubSubcategory] = useState(\"\");\r\n  const [image, setImage] = useState([]);\r\n  const [CatId, setCatId] = useState(null);\r\n\r\n  const [submitBannerLoading, setSubmitBannerLoading] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [check, setCheck] = useState(false);\r\n  const [allbaners, setAllbaners] = useState([]);\r\n  const [status, setStatus] = useState(false);\r\n\r\n  const toggleSuccess = (e) => {\r\n    setSuccess(!success);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n            query getAllCategory($page:Int,$limit:Int,$mainCategory:Boolean,$hasParent:Boolean,$catId:ID) {\r\n              getAllCategory(input:{page:$page,limit:$limit,mainCategory:$mainCategory,hasParent:$hasParent,catId:$catId}){\r\n                _id,\r\n                name,\r\n                label,\r\n                parent{\r\n                  name\r\n                }\r\n              }\r\n            }`,\r\n        variables: {\r\n          page: 1,\r\n          limit: 30,\r\n          mainCategory: true,\r\n          hasParent: false,\r\n          catId: null,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        //main category\r\n        const { getAllCategory } = res.data.data;\r\n        setAllMainCategoryServerSide(getAllCategory);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const handleStateMain = (e) => {\r\n    setMaincategory(e.target.value);\r\n    setCatId(e.target.value);\r\n\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n            query getAllCategory($page:Int,$limit:Int,$mainCategory:Boolean,$hasParent:Boolean,$catId:ID) {\r\n              getAllCategory(input:{page:$page,limit:$limit,mainCategory:$mainCategory,hasParent:$hasParent,catId:$catId}){\r\n                _id,\r\n                name,\r\n                label,\r\n                parent{\r\n                  name\r\n                }\r\n              }\r\n            }`,\r\n        variables: {\r\n          page: 1,\r\n          limit: 30,\r\n          mainCategory: false,\r\n          hasParent: true,\r\n          catId: e.target.value,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        //main category\r\n        const { getAllCategory } = res.data.data;\r\n        setAllSubCategoryServerSide(getAllCategory);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleStateSub = (e) => {\r\n    setSubcategory(e.target.value);\r\n\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n              query getAllCategory($page:Int,$limit:Int,$mainCategory:Boolean,$hasParent:Boolean,$catId:ID) {\r\n                getAllCategory(input:{page:$page,limit:$limit,mainCategory:$mainCategory,hasParent:$hasParent,catId:$catId}){\r\n                  _id,\r\n                  name,\r\n                  label,\r\n                  parent{\r\n                    name\r\n                  }\r\n                }\r\n              }`,\r\n        variables: {\r\n          page: 1,\r\n          limit: 30,\r\n          mainCategory: false,\r\n          hasParent: true,\r\n          catId: e.target.value,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        //main category\r\n        const { getAllCategory } = res.data.data;\r\n        setAllSubSubCategoryServerSide(getAllCategory);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleStateSubSub = (e) => {\r\n    setSubSubcategory(e.target.value);\r\n  };\r\n\r\n  const addImage = (id, dir) => {\r\n    const copyImage = [];\r\n    copyImage.push({\r\n      id: id,\r\n      dir: dir,\r\n    });\r\n    setImage(copyImage);\r\n    setSuccess(false);\r\n  };\r\n\r\n  const handleChangeDefault = () => {\r\n    setCheck(!check);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setSubmitBannerLoading(true);\r\n    let idForServer = null;\r\n    if (SubSubcategory) {\r\n      idForServer = SubSubcategory;\r\n    } else {\r\n      idForServer = Subcategory;\r\n    }\r\n\r\n    let tempImage = image[0].id;\r\n\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n            mutation addbaner($imageId:ID!,$default:Boolean,$catId:ID!){\r\n                addbaner(input:{imageId:$imageId,default:$default,catId:$catId}){\r\n                  status,\r\n                  message\r\n                }\r\n              }\r\n            `,\r\n        variables: {\r\n          imageId: tempImage,\r\n          default: check,\r\n          catId: idForServer,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        const { status, message } = res.data.data.addbaner;\r\n        if (status === 200) {\r\n          toast.success(message);\r\n          setSubmitBannerLoading(false);\r\n          setStatus(!status);\r\n        } else {\r\n          toast.errro(message);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    setImage([]);\r\n    setCheck(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n             query{\r\n                getAllBaner{\r\n                    _id,\r\n                  imageId{\r\n                    name,\r\n                    dir\r\n                  }\r\n                  default,\r\n                  catId{\r\n                    name\r\n                  }\r\n                }\r\n              }\r\n             `,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        const { getAllBaner } = res.data.data;\r\n        setAllbaners(getAllBaner);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [status]);\r\n\r\n  const handleDelete = (id) => {\r\n    const copyItems = [...allbaners];\r\n    setAllbaners(copyItems.filter((item) => item._id !== id));\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n                mutation deleteBaner($banerId:ID!){\r\n                    deleteBaner(banerId:$banerId){\r\n                      status,\r\n                      message\r\n                    }\r\n                  }\r\n                `,\r\n        variables: {\r\n          banerId: id,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        const { status, message } = res.data.data.deleteBaner;\r\n        if (status === 200) {\r\n          toast.success(message);\r\n          setStatus(!status);\r\n        } else {\r\n          toast.error(\"خطا در حذف بنر\");\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <ToastContainer />\r\n      <Row>\r\n        <Col xs=\"12\">\r\n          <Card>\r\n            <CardHeader>بنر</CardHeader>\r\n            <CardBody>\r\n              <FormGroup row>\r\n                <Col xs=\"6\" md=\"3\">\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"Maincategory\">دسته اصلی</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"Maincategory\"\r\n                      id=\"Maincategory\"\r\n                      value={Maincategory}\r\n                      onChange={handleStateMain}\r\n                    >\r\n                      <option></option>\r\n                      {allMainCategoryServerSide.map((item) => (\r\n                        <option value={item._id} key={item._id}>\r\n                          {item.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col xs=\"6\" md=\"3\">\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"subMaincategory\">زیر دسته</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"Subcategory\"\r\n                      id=\"Subcategory\"\r\n                      value={Subcategory}\r\n                      onChange={handleStateSub}\r\n                    >\r\n                      <option></option>\r\n                      {allSubCategoryServerSide.map((item, index) => (\r\n                        <option value={item._id} key={index}>\r\n                          {item.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col xs=\"6\" md=\"3\">\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"subMaincategory\">زیر دسته دوم</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"SubSubcategory\"\r\n                      id=\"SubSubcategory\"\r\n                      value={SubSubcategory}\r\n                      onChange={handleStateSubSub}\r\n                    >\r\n                      <option></option>\r\n                      {allSubSubCategoryServerSide\r\n                        ? allSubSubCategoryServerSide.map((item, index) => (\r\n                            <option value={item._id} key={index}>\r\n                              {item.name}\r\n                            </option>\r\n                          ))\r\n                        : null}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col xs=\"6\" md=\"3\">\r\n                  <div className={Classes.addFile}>\r\n                    <Button block color=\"primary\" onClick={toggleSuccess}>\r\n                      انتخاب تصویر\r\n                    </Button>\r\n                  </div>\r\n                </Col>\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"checkDefault\">فعال بودن</Label>\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      value={check}\r\n                      onChange={handleChangeDefault}\r\n                    ></Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col>\r\n                  {image.length > 0\r\n                    ? image.map((item, index) => (\r\n                        <img\r\n                          key={index}\r\n                          src={`${process.env.REACT_APP_BASE_URL}${item.dir}`}\r\n                          alt={item.dir}\r\n                          style={{ width: \"110px\", marginRight: \"20px\" }}\r\n                        />\r\n                      ))\r\n                    : null}\r\n                </Col>\r\n              </FormGroup>\r\n            </CardBody>\r\n            <CardFooter>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                size=\"sm\"\r\n                onClick={handleSubmit}\r\n              >\r\n                {submitBannerLoading ? <Spinner size=\"sm\" /> : \"ثبت بنر\"}\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col xs={12}>\r\n          <Card>\r\n            <CardHeader>لیست بنر ها</CardHeader>\r\n            <CardBody>\r\n              <Table responsive hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>نام دسته</th>\r\n                    <th>عکس</th>\r\n                    <th>وضعیت</th>\r\n                    <th>عملیات</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {allbaners.map((item, index) => (\r\n                    <tr key={index}>\r\n                      <td>{item.catId.name}</td>\r\n                      <td>\r\n                        <img\r\n                          src={`${process.env.REACT_APP_BASE_URL}${item.imageId.dir}`}\r\n                          alt={item.imageId.dir}\r\n                          style={{ width: \"110px\" }}\r\n                        />\r\n                      </td>\r\n                      <td>{item.default ? \"پیش فرض\" : \"عادی\"}</td>\r\n                      <td>\r\n                        <Button\r\n                          color=\"danger\"\r\n                          onClick={() => handleDelete(item._id)}\r\n                        >\r\n                          حذف\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {success ? (\r\n        <Library\r\n          success={success}\r\n          toggleSuccess={toggleSuccess}\r\n          addImage={addImage}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllMediaSection\":\"allmedia_AllMediaSection__3ovEx\",\"mediaSection\":\"allmedia_mediaSection__3t4et\",\"ModalAllMediaSection\":\"allmedia_ModalAllMediaSection__3QNCD\",\"ModalMediaSection\":\"allmedia_ModalMediaSection__3ZW3Q\",\"checkBox\":\"allmedia_checkBox__3p3Br\",\"BoxImage\":\"allmedia_BoxImage__2a8Kd\"};","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Col,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Input,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Modal,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport Classes from \"./allmedia.module.css\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"reactstrap/lib/Spinner\";\r\n\r\nconst Library = (props) => {\r\n  const [images, setImage] = useState([]);\r\n  const [arrayHolder, setArrayHolder] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const filterSearch = (event) => {\r\n    setSearch(event.target.value);\r\n    const value = arrayHolder.filter((item) => {\r\n      const itemData = item.name.toLowerCase();\r\n      const searchData = event.target.value.toLowerCase();\r\n      return itemData.indexOf(searchData) > -1;\r\n    });\r\n    setImage(value);\r\n  };\r\n\r\n  const changeStatus = (id) => {\r\n    const alldata = [...images];\r\n    const newData = alldata.filter((item) => item._id === id);\r\n    newData[0].checked = !newData[0].checked;\r\n    setImage(alldata);\r\n  };\r\n\r\n\r\n  const { toggleSuccess, success, addImage } = props;\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n            query getAllMultimedia($page:Int,$limit:Int){\r\n                getAllMultimedia(page :$page , limit :$limit){\r\n                  _id,\r\n                  name,\r\n                  dir,\r\n                  format,\r\n                  dimWidth,\r\n                  dimHeight,\r\n                  createdAt\r\n                }\r\n              },\r\n            `,\r\n        variables: {\r\n          page: 1,\r\n          limit: 50,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        const { getAllMultimedia } = res.data.data;\r\n        for (let index = 0; index < getAllMultimedia.length; index++) {\r\n          const element = getAllMultimedia[index];\r\n          element.checked = false;\r\n        }\r\n        setImage(getAllMultimedia);\r\n        setArrayHolder(getAllMultimedia);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <Modal\r\n        isOpen={success}\r\n        toggle={toggleSuccess}\r\n        className={\"modal-lg \" + props.className}\r\n      >\r\n        <ModalHeader toggle={toggleSuccess}>\r\n          <Row>\r\n            <Col md=\"12\" xs=\"10\">\r\n              <InputGroup>\r\n                <InputGroupAddon addonType=\"append\">\r\n                  <InputGroupText>جستجو تصویر</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"جستجو کنید.....\"\r\n                  value={search}\r\n                  onChange={filterSearch}\r\n                />\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className={Classes.ModalAllMediaSection}>\r\n            {loading ? (\r\n              <Spinner animation=\"grow\" size=\"sm\" />\r\n            ) : (\r\n              images.map((item, index) => (\r\n                <div className={Classes.ModalMediaSection} key={item._id}>\r\n                  <label\r\n                    htmlFor={`imageCheckBox${index}`}\r\n                    onChange={() => {\r\n                      addImage(item._id, item.dir);\r\n                      changeStatus(item._id);\r\n                    }}\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className={Classes.checkBox}\r\n                      id={`imageCheckBox${index}`}\r\n                    />\r\n\r\n                    <img\r\n                      src={`${process.env.REACT_APP_BASE_URL}${item.dir}`}\r\n                      alt={item.dir}\r\n                      name={`imageCheckBox${index}`}\r\n                    />\r\n                  </label>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addFile\":\"Banner_addFile__3HzcO\"};"],"sourceRoot":""}