{"version":3,"sources":["views/Users/Comments.js"],"names":["Comments","props","id","match","params","useState","comments","setComments","loading","setLoading","change","setChange","history","push","useEffect","axios","url","method","data","query","variables","userId","page","limit","then","res","errors","toast","error","getUsers","catch","err","console","log","handleChangeStatusComment","commentId","changeStatusComment","status","message","success","className","lg","size","responsive","hover","map","item","index","comment","idx","date","Date","createdAt","toLocaleDateString","commentLink","_id","key","product","fname","phone","title","like","length","dislike","color","style","cursor","onClick","to"],"mappings":"mSAmMeA,UAlLE,SAACC,GAAW,IACnBC,EAAOD,EAAME,MAAMC,OAAnBF,GADkB,EAEMG,mBAAS,IAFf,mBAEnBC,EAFmB,KAETC,EAFS,OAGIF,oBAAS,GAHb,mBAGnBG,EAHmB,KAGVC,EAHU,OAIEJ,oBAAS,GAJX,mBAInBK,EAJmB,KAIXC,EAJW,KAKrBT,GACHD,EAAMW,QAAQC,KAAK,cAGrBC,qBAAU,WACRL,GAAW,GACXM,IAAM,CACJC,IAAK,IACLC,OAAQ,OACRC,KAAM,CACJC,MAAM,qmBA0BNC,UAAW,CACTC,OAAQnB,EACRoB,KAAM,EACNC,MAAO,OAIVC,MAAK,SAACC,GACLhB,GAAW,GACPgB,EAAIP,KAAKQ,OACXC,IAAMC,MAAM,mHAEZrB,EAAYkB,EAAIP,KAAKA,KAAKW,aAG7BC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,CAAC7B,EAAIQ,IAER,IAAMwB,EAA4B,SAAChC,GACjCa,IAAM,CACJC,IAAK,IACLC,OAAQ,OACRC,KAAM,CACJC,MAAM,4LAQNC,UAAW,CACTe,UAAWjC,MAGdsB,MAAK,SAACC,GAAS,IAAD,EACaA,EAAIP,KAAKA,KAAKkB,oBAAlCC,EADO,EACPA,OAAQC,EADD,EACCA,QACD,MAAXD,GACFV,IAAMY,QAAQD,GACd3B,GAAWD,IAEXiB,IAAMC,MAAMU,OAKlB,OACE,yBAAKE,UAAU,mBACb,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAI,IACP,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,gCACE,uBAAGD,UAAU,mBADf,2DACgD,IAC7CvC,EAAME,MAAMC,OAAOF,KAGxB,kBAAC,IAAD,KACGM,EACC,gCACE,kBAAC,IAAD,CAASkC,KAAK,QAGhB,kBAAC,IAAD,CAAOC,YAAU,EAACC,OAAK,GACrB,+BACE,4BACE,iFACA,8DACA,oGACA,8DACA,uFACA,0GACA,8DACA,sEAGJ,+BACGtC,EAASuC,KAAI,SAACC,EAAMC,GACnB,OAAOD,EAAKE,QAAQH,KAAI,SAACG,EAASC,GAChC,IAAMC,EAAO,IAAIC,KACfH,EAAQI,WACRC,mBAAmB,SACfC,EAAW,yBAAqBN,EAAQO,KAC9C,OACE,wBAAIC,IAAKR,EAAQO,KACf,4BAAKP,EAAQS,QAAQC,OACrB,4BAAKZ,EAAKa,OACV,4BAAKT,GACL,4BAAKF,EAAQY,OACb,4BAAKZ,EAAQa,KAAKC,QAClB,4BAAKd,EAAQe,QAAQD,QACrB,4BACGd,EAAQX,OACP,kBAAC,IAAD,CACE2B,MAAM,UACNC,MAAO,CAACC,OAAO,WACfC,QAAS,kBACPjC,EAA0Bc,EAAQO,OAJtC,qDAUA,kBAAC,IAAD,CACES,MAAM,SACNC,MAAO,CAACC,OAAO,WACfC,QAAS,kBACPjC,EAA0Bc,EAAQO,OAJtC,4DAWJ,4BACE,kBAAC,UAAD,CAASa,GAAId,GACX,kBAAC,IAAD,CAAQZ,KAAK,KAAKsB,MAAM,WACtB,uBAAGxB,UAAU","file":"static/js/88.a637fa93.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n  Table,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from \"axios\";\r\nimport Spinner from \"reactstrap/lib/Spinner\";\r\nimport Badge from \"reactstrap/lib/Badge\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Comments = (props) => {\r\n  const { id } = props.match.params;\r\n  const [comments, setComments] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [change, setChange] = useState(false);\r\n  if (!id) {\r\n    props.history.push(\"/dashboard\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n        query alluser($userId:ID,$page:Int,$limit:Int){\r\n            getUsers(userId:$userId,page:$page,limit:$limit){\r\n              _id,\r\n              phone,\r\n              comment{\r\n                _id,\r\n                title,\r\n                product{\r\n                  _id,\r\n                  fname\r\n                },\r\n                description,\r\n                like{\r\n                  _id\r\n                },\r\n                dislike{\r\n                  _id\r\n                },\r\n                createdAt,\r\n                status\r\n              },\r\n          \r\n          }\r\n          }\r\n        `,\r\n        variables: {\r\n          userId: id,\r\n          page: 1,\r\n          limit: 30,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.data.errors) {\r\n          toast.error(\"خطا در دریافت اطلاعات\");\r\n        } else {\r\n          setComments(res.data.data.getUsers);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [id, change]);\r\n\r\n  const handleChangeStatusComment = (id) => {\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n        mutation changeStatusComment($commentId:ID!){\r\n          changeStatusComment(commentId:$commentId){\r\n            status,\r\n            message\r\n          }\r\n        }\r\n        `,\r\n        variables: {\r\n          commentId: id,\r\n        },\r\n      },\r\n    }).then((res) => {\r\n      const { status, message } = res.data.data.changeStatusComment;\r\n      if (status === 200) {\r\n        toast.success(message);\r\n        setChange(!change);\r\n      } else {\r\n        toast.error(message);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <ToastContainer />\r\n      <Row>\r\n        <Col lg={12}>\r\n          <Card>\r\n            <CardHeader>\r\n              <strong>\r\n                <i className=\"icon-info pr-1\"></i>ایدی کاربر:{\" \"}\r\n                {props.match.params.id}\r\n              </strong>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {loading ? (\r\n                <center>\r\n                  <Spinner size=\"sm\" />\r\n                </center>\r\n              ) : (\r\n                <Table responsive hover>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>نام محصول</th>\r\n                      <th>کاربر</th>\r\n                      <th>تاریخ ثبت نظر</th>\r\n                      <th>عنوان</th>\r\n                      <th>تعداد لایک</th>\r\n                      <th>تعداد دیس لایک</th>\r\n                      <th>وضعیت</th>\r\n                      <th>عملیات</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {comments.map((item, index) => {\r\n                      return item.comment.map((comment, idx) => {\r\n                        const date = new Date(\r\n                          comment.createdAt\r\n                        ).toLocaleDateString(\"fa-IR\");\r\n                        const commentLink = `commentDetails/${comment._id}`;\r\n                        return (\r\n                          <tr key={comment._id}>\r\n                            <td>{comment.product.fname}</td>\r\n                            <td>{item.phone}</td>\r\n                            <td>{date}</td>\r\n                            <td>{comment.title}</td>\r\n                            <td>{comment.like.length}</td>\r\n                            <td>{comment.dislike.length}</td>\r\n                            <td>\r\n                              {comment.status ? (\r\n                                <Badge\r\n                                  color=\"success\"\r\n                                  style={{cursor:'pointer'}}\r\n                                  onClick={() =>\r\n                                    handleChangeStatusComment(comment._id)\r\n                                  }\r\n                                >\r\n                                  تایید شده\r\n                                </Badge>\r\n                              ) : (\r\n                                <Badge\r\n                                  color=\"danger\"\r\n                                  style={{cursor:'pointer'}}\r\n                                  onClick={() =>\r\n                                    handleChangeStatusComment(comment._id)\r\n                                  }\r\n                                >\r\n                                  تایید نشده\r\n                                </Badge>\r\n                              )}\r\n                            </td>\r\n                            <td>\r\n                              <NavLink to={commentLink}>\r\n                                <Button size=\"sm\" color=\"primary\">\r\n                                  <i className=\"fa fa-info-circle\"></i>\r\n                                </Button>\r\n                              </NavLink>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      });\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"sourceRoot":""}