{"version":3,"sources":["views/Product/ProductPictures.js","views/Product/product.module.css","views/Media/allmedia.module.css","views/Media/Library.js"],"names":["ProductPictures","props","productId","match","params","useState","products","setProducts","images","setImages","success","setSuccess","history","replace","useEffect","axios","url","method","data","query","variables","page","limit","then","res","errors","toast","error","getAllProduct","catch","err","console","log","toggleSuccess","className","xs","length","style","display","justifyContent","fontSize","fname","onClick","Classes","BoxMainMedia","map","item","index","BoxMedia","key","src","process","dir","alt","removeBtnImage","e","id","copyImage","findIndex","image","_id","splice","removeImage","arrayImages","push","imageId","updateProductGallery","status","message","size","addImage","module","exports","Library","setImage","arrayHolder","setArrayHolder","loading","setLoading","search","setSearch","getAllMultimedia","checked","isOpen","toggle","md","addonType","placeholder","value","onChange","event","target","filter","itemData","name","toLowerCase","searchData","indexOf","ModalAllMediaSection","animation","ModalMediaSection","htmlFor","alldata","newData","changeStatus","type","checkBox"],"mappings":"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","file":"static/js/64.31fecfdd.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n  CardFooter,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"reactstrap/lib/Spinner\";\r\nimport Classes from \"./product.module.css\";\r\nimport Library from \"../Media/Library\";\r\n\r\nconst ProductPictures = (props) => {\r\n  const { productId } = props.match.params;\r\n  const [products, setProducts] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  if (!productId) {\r\n    props.history.replace(\"/dashboard\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n        query getAllProduct($page:Int,$limit:Int,$productId:ID){\r\n            getAllProduct(page:$page,limit:$limit,productId:$productId){\r\n              _id,\r\n              fname,\r\n              images{\r\n               _id,\r\n               dir\r\n            }\r\n            }\r\n            }\r\n            `,\r\n        variables: {\r\n          page: 1,\r\n          limit: 30,\r\n          productId: productId,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.errors) {\r\n          toast.error(\"خطا در دریافت اطلاعات\");\r\n        } else {\r\n          const { getAllProduct } = res.data.data;\r\n          setImages(getAllProduct[0].images);\r\n          setProducts(getAllProduct);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [productId]);\r\n\r\n  const toggleSuccess = () => {\r\n    setSuccess(!success);\r\n  };\r\n\r\n  const addImage = (id, dir) => {\r\n    const copyImage = [...images];\r\n    copyImage.push({\r\n      _id: id,\r\n      dir: dir,\r\n    });\r\n    setImages(copyImage);\r\n  };\r\n\r\n  const removeImage = (e, id) => {\r\n    const copyImage = [...images];\r\n    const index = copyImage.findIndex((image) => image._id === id);\r\n    console.log(index);\r\n    copyImage.splice(index, 1);\r\n    setImages(copyImage);\r\n  };\r\n\r\n  const SubmitUpdateGallery = (e)=>{\r\n      const copyImage = [...images];\r\n      const arrayImages = [];\r\n      copyImage.map((item)=>arrayImages.push(item._id))\r\n      \r\n      axios({\r\n        url:'/',\r\n        method:'post',\r\n        data:{\r\n          query:`\r\n           mutation updateProductGallery($productId:ID!,$imageId:[ID!]!){\r\n               updateProductGallery(productId:$productId,imageId:$imageId){\r\n                 status,\r\n                 message\r\n               }\r\n             }\r\n          `,\r\n          variables:{\r\n            productId:productId,\r\n            imageId:arrayImages\r\n          }\r\n        }\r\n      })\r\n      .then(res=>{\r\n        const {status,message} = res.data.data.updateProductGallery;\r\n        if (status === 200) {\r\n          toast.success(message)\r\n        } else {\r\n          toast.error(message)\r\n        }\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <ToastContainer />\r\n      <Row>\r\n        <Col xs=\"12\">\r\n          <Card>\r\n            {products.length > 0 ? (\r\n              <>\r\n                <CardHeader\r\n                  style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n                >\r\n                  <span style={{ fontSize: \"20px\" }}>\r\n                    نام محصول : {products[0].fname}\r\n                  </span>\r\n                  <Button className=\"btn-success\" onClick={toggleSuccess}>\r\n                    انتخاب عکس\r\n                  </Button>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className={Classes.BoxMainMedia}>\r\n                    {images.length > 0\r\n                      ? images.map((item, index) => (\r\n                          <div className={Classes.BoxMedia} key={index}>\r\n                            <img\r\n                              src={`${process.env.REACT_APP_BASE_URL}${item.dir}`}\r\n                              alt={item.dir}\r\n                            />\r\n                            <span\r\n                              className={Classes.removeBtnImage}\r\n                              onClick={(e) => removeImage(e, item._id)}\r\n                            >\r\n                              <i className=\"fa fa-remove fa-lg\"></i>\r\n                            </span>\r\n                          </div>\r\n                        ))\r\n                      : null}\r\n                  </div>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <Button className=\"btn-success\" onClick={SubmitUpdateGallery}>\r\n                        ثبت تصاویر گالری\r\n                  </Button>\r\n                </CardFooter>\r\n              </>\r\n            ) : (\r\n              <center>\r\n                <Spinner size=\"sm\" />\r\n              </center>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      {success ? (\r\n        <Library\r\n          success={success}\r\n          toggleSuccess={toggleSuccess}\r\n          addImage={addImage}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductPictures;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BOX\":\"product_BOX__139QT\",\"delete\":\"product_delete__3RrQt\",\"edit\":\"product_edit__2x7Xa\",\"editRemove\":\"product_editRemove__sU-gs\",\"addPlus\":\"product_addPlus__27v03\",\"color\":\"product_color__2Tg0i\",\"inputSpec\":\"product_inputSpec__xCzHI\",\"addFile\":\"product_addFile__Oj7nv\",\"inputFile\":\"product_inputFile__8stA2\",\"addImage\":\"product_addImage__3pZvw\",\"centercontain\":\"product_centercontain__3_qyw\",\"imageBrand\":\"product_imageBrand__2vQA2\",\"td\":\"product_td__DD3jU\",\"tabel\":\"product_tabel__kEvrV\",\"iconBox\":\"product_iconBox__1Ndss\",\"Box\":\"product_Box__12g2x\",\"Boxred\":\"product_Boxred__3hMbd\",\"BoxValue\":\"product_BoxValue__J0uCi\",\"BoxMainMedia\":\"product_BoxMainMedia__11LV4\",\"BoxMedia\":\"product_BoxMedia__qxPRi\",\"removeBtnImage\":\"product_removeBtnImage__3LkJU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllMediaSection\":\"allmedia_AllMediaSection__3ovEx\",\"mediaSection\":\"allmedia_mediaSection__3t4et\",\"ModalAllMediaSection\":\"allmedia_ModalAllMediaSection__3QNCD\",\"ModalMediaSection\":\"allmedia_ModalMediaSection__3ZW3Q\",\"checkBox\":\"allmedia_checkBox__3p3Br\",\"BoxImage\":\"allmedia_BoxImage__2a8Kd\"};","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Col,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Input,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Modal,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport Classes from \"./allmedia.module.css\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"reactstrap/lib/Spinner\";\r\n\r\nconst Library = (props) => {\r\n  const [images, setImage] = useState([]);\r\n  const [arrayHolder, setArrayHolder] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const filterSearch = (event) => {\r\n    setSearch(event.target.value);\r\n    const value = arrayHolder.filter((item) => {\r\n      const itemData = item.name.toLowerCase();\r\n      const searchData = event.target.value.toLowerCase();\r\n      return itemData.indexOf(searchData) > -1;\r\n    });\r\n    setImage(value);\r\n  };\r\n\r\n  const changeStatus = (id) => {\r\n    const alldata = [...images];\r\n    const newData = alldata.filter((item) => item._id === id);\r\n    newData[0].checked = !newData[0].checked;\r\n    setImage(alldata);\r\n  };\r\n\r\n\r\n  const { toggleSuccess, success, addImage } = props;\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n            query getAllMultimedia($page:Int,$limit:Int){\r\n                getAllMultimedia(page :$page , limit :$limit){\r\n                  _id,\r\n                  name,\r\n                  dir,\r\n                  format,\r\n                  dimWidth,\r\n                  dimHeight,\r\n                  createdAt\r\n                }\r\n              },\r\n            `,\r\n        variables: {\r\n          page: 1,\r\n          limit: 50,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        const { getAllMultimedia } = res.data.data;\r\n        for (let index = 0; index < getAllMultimedia.length; index++) {\r\n          const element = getAllMultimedia[index];\r\n          element.checked = false;\r\n        }\r\n        setImage(getAllMultimedia);\r\n        setArrayHolder(getAllMultimedia);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <Modal\r\n        isOpen={success}\r\n        toggle={toggleSuccess}\r\n        className={\"modal-lg \" + props.className}\r\n      >\r\n        <ModalHeader toggle={toggleSuccess}>\r\n          <Row>\r\n            <Col md=\"12\" xs=\"10\">\r\n              <InputGroup>\r\n                <InputGroupAddon addonType=\"append\">\r\n                  <InputGroupText>جستجو تصویر</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"جستجو کنید.....\"\r\n                  value={search}\r\n                  onChange={filterSearch}\r\n                />\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className={Classes.ModalAllMediaSection}>\r\n            {loading ? (\r\n              <Spinner animation=\"grow\" size=\"sm\" />\r\n            ) : (\r\n              images.map((item, index) => (\r\n                <div className={Classes.ModalMediaSection} key={item._id}>\r\n                  <label\r\n                    htmlFor={`imageCheckBox${index}`}\r\n                    onChange={() => {\r\n                      addImage(item._id, item.dir);\r\n                      changeStatus(item._id);\r\n                    }}\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className={Classes.checkBox}\r\n                      id={`imageCheckBox${index}`}\r\n                    />\r\n\r\n                    <img\r\n                      src={`${process.env.REACT_APP_BASE_URL}${item.dir}`}\r\n                      alt={item.dir}\r\n                      name={`imageCheckBox${index}`}\r\n                    />\r\n                  </label>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n"],"sourceRoot":""}