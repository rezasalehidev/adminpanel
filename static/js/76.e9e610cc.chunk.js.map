{"version":3,"sources":["views/Order/OrderDetails.js","views/Order/order.module.css"],"names":["OrderDetails","props","useState","Orders","setOrders","setAllOrderStatus","loading","setLoading","orderId","match","params","history","push","useEffect","axios","url","method","data","query","variables","then","res","getAllPayment","catch","err","console","log","page","limit","getAllOrderStatus","className","xs","size","length","Fragment","_id","Date","createdAt","toLocaleDateString","Classes","cardBoDy","user","phone","fname","address","count","Number","price","toLocaleString","module","exports"],"mappings":"iRAgLeA,UA5JM,SAACC,GAAW,IAAD,EACFC,mBAAS,IADP,mBACvBC,EADuB,KACfC,EADe,OAEcF,mBAAS,IAFvB,mBAEPG,GAFO,aAGAH,oBAAS,GAHT,mBAGvBI,EAHuB,KAGdC,EAHc,KAKtBC,EAAYP,EAAMQ,MAAMC,OAAxBF,QAoFR,OAnFKA,GACHP,EAAMU,QAAQC,KAAK,aAGrBC,qBAAU,WACRN,GAAW,GACXO,IAAM,CACJC,IAAK,IACLC,OAAQ,OACRC,KAAM,CACJC,MAAM,0vBAiCNC,UAAW,CACTX,QAASA,MAIZY,MAAK,SAACC,GACLd,GAAW,GADE,IAELe,EAAkBD,EAAIJ,KAAKA,KAA3BK,cACRlB,EAAUkB,MAEXC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,CAAChB,IAEJK,qBAAU,WACRC,IAAM,CACJC,IAAK,IACLC,OAAQ,OACRC,KAAM,CACJC,MAAM,6NASNC,UAAW,CACTQ,KAAM,EACNC,MAAO,OAIVR,MAAK,SAACC,GAAS,IACNQ,EAAsBR,EAAIJ,KAAKA,KAA/BY,kBACRxB,EAAkBwB,MAEnBN,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,IAGD,yBAAKM,UAAU,mBACb,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAG,MACLzB,EACC,gCACE,kBAAC,IAAD,CAAS0B,KAAK,QAEd7B,EAAO8B,OAAS,EAClB,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,mGAAkB/B,EAAO,GAAGgC,KAC5B,kHACqB,IAClB,IAAIC,KAAKjC,EAAO,GAAGkC,WAAWC,mBAAmB,WAGtD,kBAAC,IAAD,CAAUR,UAAWS,IAAQC,UAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,gEAAiBrC,EAAO,GAAGsC,KAAKC,MAAhC,KACA,kBAAC,IAAD,6EAAoBvC,EAAO,GAAGsC,KAAKE,MAAnC,OAGJ,kBAAC,IAAD,CAAUb,UAAWS,IAAQC,UAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,qGAAwBrC,EAAO,GAAGsC,KAAKG,QAAvC,KACA,kBAAC,IAAD,mFAAqBzC,EAAO,GAAG0C,MAA/B,OAGJ,kBAAC,IAAD,CAAUf,UAAWS,IAAQC,UAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,kGACA,kBAAC,IAAD,+CAEG,IAAIM,OAAO3C,EAAO,GAAG4C,OAAOC,eAAe,SAAU,IAFxD,iCAGQ,OAIZ,kBAAC,IAAD,OAEF,sFAiBA,U,oBCxKdC,EAAOC,QAAU,CAAC,SAAW,wBAAwB,QAAU,uBAAuB,MAAQ,qBAAqB,UAAY,yBAAyB,YAAc,2BAA2B,IAAM,mBAAmB,SAAW,wBAAwB,UAAY,yBAAyB,WAAa,0BAA0B,SAAW","file":"static/js/76.e9e610cc.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n  CardFooter,\r\n  Button,\r\n  Input,\r\n  FormGroup,\r\n  Label,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport Classes from \"./order.module.css\";\r\nimport Spinner from \"reactstrap/lib/Spinner\";\r\n\r\nconst OrderDetails = (props) => {\r\n  const [Orders, setOrders] = useState([]);\r\n  const [AllOrderStatus, setAllOrderStatus] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { orderId } = props.match.params;\r\n  if (!orderId) {\r\n    props.history.push(\"/dashbard\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n          query getAllPayment($orderId:ID) {\r\n            getAllPayment(orderId:$orderId) {\r\n              _id,\r\n              user {\r\n                phone,\r\n                address,\r\n                fname\r\n              }\r\n              products {\r\n                product{\r\n                  fname,\r\n                  ename\r\n                },\r\n                attribute{\r\n                  price\r\n                  seller{\r\n                    name\r\n                  }\r\n                }\r\n              }\r\n              paymentstatus,\r\n              resnumber,\r\n              discount,\r\n              count,\r\n              price,\r\n              createdAt,\r\n              orderstatus{\r\n                _id\r\n              }\r\n    }\r\n}  \r\n                 `,\r\n        variables: {\r\n          orderId: orderId,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setLoading(false);\r\n        const { getAllPayment } = res.data.data;\r\n        setOrders(getAllPayment);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [orderId]);\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n          query getAllOrderStatus($page:Int,$limit:Int){\r\n            getAllOrderStatus(page:$page,limit:$limit){\r\n              _id,\r\n              name,\r\n              image,\r\n            }\r\n          }\r\n          `,\r\n        variables: {\r\n          page: 1,\r\n          limit: 30,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        const { getAllOrderStatus } = res.data.data;\r\n        setAllOrderStatus(getAllOrderStatus);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <ToastContainer />\r\n      <Row>\r\n        <Col xs=\"12\">\r\n          {loading ? (\r\n            <center>\r\n              <Spinner size=\"sm\" />\r\n            </center>\r\n          ) : Orders.length > 0 ? (\r\n            <React.Fragment>\r\n              <Card>\r\n                <CardHeader>\r\n                  <h6>جزئیات سفارش:{Orders[0]._id}</h6>\r\n                  <h6>\r\n                    ثبت شده در تاریخ :{\" \"}\r\n                    {new Date(Orders[0].createdAt).toLocaleDateString(\"fa-IR\")}\r\n                  </h6>\r\n                </CardHeader>\r\n                <CardBody className={Classes.cardBoDy}>\r\n                  <Row>\r\n                    <Col>شماره تماس:{Orders[0].user.phone} </Col>\r\n                    <Col>تحویل گیرنده :{Orders[0].user.fname} </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardBody className={Classes.cardBoDy}>\r\n                  <Row>\r\n                    <Col>آدرس تحویل گیرنده:{Orders[0].user.address} </Col>\r\n                    <Col>تعداد سفارشات :{Orders[0].count} </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardBody className={Classes.cardBoDy}>\r\n                  <Row>\r\n                    <Col>مبلغ قابل پرداخت:0 </Col>\r\n                    <Col>\r\n                      مبلغ کل :\r\n                      {new Number(Orders[0].price).toLocaleString(\"fa-IR\")}{\" \"}\r\n                      تومان{\" \"}\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter></CardFooter>\r\n              </Card>\r\n              <h5>مرسوله 1 از 1</h5>\r\n              {/* <Card>\r\n                <CardBody>\r\n                  <div className={Classes.mainWraper}>\r\n                    {AllOrderStatus.map((item, index) => (\r\n                      <div className={`${Classes.BoxWraper} ${Orders[0].orderstatus._id === item._id ? Classes.isActive : null}`} >\r\n                        <img\r\n                          src={`${process.env.REACT_APP_BASE_URL}${item.image}`}\r\n                          alt={item.image}\r\n                        />\r\n                        <label>{item.name}</label>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </CardBody>\r\n              </Card> */}\r\n            </React.Fragment>\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BOXimage\":\"order_BOXimage__1NEWP\",\"addFile\":\"order_addFile__2epp0\",\"label\":\"order_label__2Y9LP\",\"inputFile\":\"order_inputFile__3wse7\",\"WraperImage\":\"order_WraperImage__n7S-P\",\"txt\":\"order_txt__J4tI6\",\"cardBoDy\":\"order_cardBoDy__3h500\",\"BoxWraper\":\"order_BoxWraper__3_3zq\",\"mainWraper\":\"order_mainWraper__3Jt85\",\"isActive\":\"order_isActive__w8rxY\"};"],"sourceRoot":""}