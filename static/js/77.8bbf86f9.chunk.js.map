{"version":3,"sources":["views/Shop/Addsurvey.js","views/Shop/shop.module.css"],"names":["Addsurvey","props","useState","mainCategoryFromServer","setMainCategoryFromServer","subCategoryFromServer","setSubCategoryFromServer","files","setFiles","catID","setcatID","loadingSubmit","setLoadingSubmit","resultSubCategoryFromServer","setResultSubCategoryFromServer","success","setSuccess","resultSurvey","setResultSurvey","useEffect","axios","url","method","data","query","variables","page","limit","mainCategory","hasParent","catId","then","res","getAllCategory","catch","err","console","log","toggleSuccess","className","xs","row","htmlFor","type","name","id","onChange","e","target","value","map","item","index","key","_id","Classes","btnAddSurvey","color","onClick","prev","label","scoreID","labelID","Fragment","copyname","handlename","required","copylabel","handlelabel","removeSurvey","style","marginTop","cursor","copy","splice","removeItem","size","toast","warn","length","element","arr","category","push","list","survey","status","message","error","marginRight","sm","striped","responsive","clickShowSurvey","idCategory","getAllSurvey","isOpen","toggle","disabled","module","exports"],"mappings":"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","file":"static/js/77.8bbf86f9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n  CardFooter,\r\n  Button,\r\n  Input,\r\n  FormGroup,\r\n  Label,\r\n  Table,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Modal,\r\n} from \"reactstrap\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport Classes from \"./shop.module.css\";\r\nimport Spinner from \"reactstrap/lib/Spinner\";\r\n\r\nconst Addsurvey = (props) => {\r\n  const [mainCategoryFromServer, setMainCategoryFromServer] = useState([]);\r\n  const [subCategoryFromServer, setSubCategoryFromServer] = useState([]);\r\n  const [files, setFiles] = useState([]);\r\n  const [catID, setcatID] = useState(\"\");\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [resultSubCategoryFromServer, setResultSubCategoryFromServer] =\r\n    useState([]);\r\n  const [success, setSuccess] = useState(false);\r\n  const [resultSurvey, setResultSurvey] = useState([]);\r\n\r\n  useEffect(() => {\r\n    //all category\r\n\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n        query getAllCategory($page:Int,$limit:Int,$mainCategory:Boolean,$hasParent:Boolean,$catId:ID) {\r\n          getAllCategory(input:{page:$page,limit:$limit,mainCategory:$mainCategory,hasParent:$hasParent,catId:$catId}){\r\n            _id,\r\n            name\r\n          }\r\n        }`,\r\n        variables: {\r\n          page: 1,\r\n          limit: 30,\r\n          mainCategory: true,\r\n          hasParent: false,\r\n          catId: null,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        const { getAllCategory } = res.data.data;\r\n        setMainCategoryFromServer(getAllCategory);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const handleSubmitMain = (e) => {\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n        query getAllCategory($page:Int,$limit:Int,$mainCategory:Boolean,$hasParent:Boolean,$catId:ID) {\r\n          getAllCategory(input:{page:$page,limit:$limit,mainCategory:$mainCategory,hasParent:$hasParent,catId:$catId}){\r\n            _id,\r\n            name\r\n          }\r\n        }`,\r\n        variables: {\r\n          page: 1,\r\n          limit: 30,\r\n          mainCategory: false,\r\n          hasParent: true,\r\n          catId: e.target.value,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        //all category\r\n        const { getAllCategory } = res.data.data;\r\n        setSubCategoryFromServer(getAllCategory);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleMainSurvey = (e) => {\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n        query getAllCategory($page:Int,$limit:Int,$mainCategory:Boolean,$hasParent:Boolean,$catId:ID) {\r\n          getAllCategory(input:{page:$page,limit:$limit,mainCategory:$mainCategory,hasParent:$hasParent,catId:$catId}){\r\n            _id,\r\n            name\r\n          }\r\n        }`,\r\n        variables: {\r\n          page: 1,\r\n          limit: 30,\r\n          mainCategory: false,\r\n          hasParent: true,\r\n          catId: e.target.value,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        //all category\r\n        const { getAllCategory } = res.data.data;\r\n        setResultSubCategoryFromServer(getAllCategory);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleFileds = () => {\r\n    setFiles((prev) => [...prev, { name: \"\", label: \"\" }]);\r\n  };\r\n\r\n  const handlename = (e, index) => {\r\n    let copyname = [...files];\r\n    copyname[index].name = e.target.value;\r\n    setFiles(copyname);\r\n  };\r\n\r\n  const handlelabel = (e, index) => {\r\n    let copylabel = [...files];\r\n    copylabel[index].label = e.target.value;\r\n    setFiles(copylabel);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    let copy = [...files];\r\n\r\n    //check catID\r\n    if (catID === \"\") {\r\n      toast.warn(\"یک زیر دسته دو م را انتخاب نمائید\");\r\n      return false;\r\n    }\r\n\r\n    //check length files\r\n    if (files.length === 0) {\r\n      toast.warn(\"حداقل باید یک امتیاز دهی برا ی ثبت مشخص کنید\");\r\n      return false;\r\n    }\r\n\r\n    //check value name Empty\r\n    for (let index = 0; index < copy.length; index++) {\r\n      const element = copy[index];\r\n      if (element.name === \"\") {\r\n        toast.warn(\"فیلد نام امتیاز دهی نباید خالی باشد\");\r\n        copy.splice(element, 1);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    setLoadingSubmit(true);\r\n\r\n    let arr = [];\r\n    for (let index = 0; index < copy.length; index++) {\r\n      const element = copy[index];\r\n      element.category = catID;\r\n      arr.push(element);\r\n    }\r\n    setFiles(arr);\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n        mutation addsurvey($list:[inputSurveyList!]!){\r\n          survey(input:{list:$list}){\r\n            status,\r\n            message\r\n          }\r\n        }`,\r\n        variables: {\r\n          list: files,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setLoadingSubmit(false);\r\n        const { status, message } = res.data.data.survey;\r\n        if (status === 200) {\r\n          toast.success(message);\r\n          setFiles([]);\r\n        } else {\r\n          toast.error(message);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const removeItem = (e, index) => {\r\n    const copy = [...files];\r\n    copy.splice(index, 1);\r\n    setFiles(copy);\r\n  };\r\n\r\n  const toggleSuccess = () => {\r\n    setSuccess(!success);\r\n  };\r\n\r\n  const setChange = (idCategory) => {\r\n    setSuccess(true);\r\n    setResultSurvey([])\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n        query survey($catId:ID!){\r\n          getAllSurvey(catId:$catId){\r\n            name,\r\n            label,\r\n            category{\r\n              _id,\r\n              name\r\n            }\r\n          }\r\n        }`,\r\n        variables: {\r\n          catId: idCategory,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        const { getAllSurvey } = res.data.data;\r\n        setResultSurvey(getAllSurvey);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <ToastContainer />\r\n      <Row>\r\n        <Col xs=\"12\">\r\n          <Card>\r\n            <CardHeader>اضافه کردن امتیاز محصول</CardHeader>\r\n            <CardBody>\r\n              <FormGroup row>\r\n                <Col xs=\"5\">\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"Maincategory\">دسته اصلی</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"Maincategory\"\r\n                      id=\"Maincategory\"\r\n                      onChange={handleSubmitMain}\r\n                    >\r\n                      <option></option>\r\n                      {mainCategoryFromServer.map((item, index) => (\r\n                        <option key={item._id} value={item._id}>\r\n                          {item.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col xs=\"5\">\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"subcategory\">دسته دوم</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"subcategory\"\r\n                      id=\"subcategory\"\r\n                      onChange={(e) => setcatID(e.target.value)}\r\n                    >\r\n                      <option></option>\r\n                      {subCategoryFromServer.map((item, index) => (\r\n                        <option key={item._id} value={item._id}>\r\n                          {item.name}\r\n                        </option>\r\n                      ))}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col xs=\"2\" className={Classes.btnAddSurvey}>\r\n                  <Button\r\n                    color=\"success\"\r\n                    className=\"btn-pill\"\r\n                    onClick={handleFileds}\r\n                  >\r\n                    <i className=\"fa fa-plus fa-lg\"></i>\r\n                  </Button>\r\n                </Col>\r\n\r\n                {files.map((item, index) => {\r\n                  const scoreID = `name-${index}`;\r\n                  const labelID = `label-${index}`;\r\n\r\n                  return (\r\n                    <React.Fragment key={index}>\r\n                      {\" \"}\r\n                      <Col xs=\"5\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"titleSurvey\">عنوان امتیاز</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name={scoreID}\r\n                            id={scoreID}\r\n                            value={item.name}\r\n                            onChange={(e) => handlename(e, index)}\r\n                            required\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col xs=\"5\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"titleSurvey\">توضیح امتیاز</Label>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name={labelID}\r\n                            onChange={(e) => handlelabel(e, index)}\r\n                            id={labelID}\r\n                            value={item.label}\r\n                            required\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col xs=\"2\" className={Classes.removeSurvey}>\r\n                        <span\r\n                          style={{\r\n                            marginTop: \"-5px\",\r\n                            cursor: \"pointer\",\r\n                            color: \"red\",\r\n                          }}\r\n                          onClick={(e) => removeItem(e, index)}\r\n                        >\r\n                          <i className=\"fa fa-remove fa-lg mt-4\"></i>\r\n                        </span>\r\n                      </Col>{\" \"}\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n              </FormGroup>\r\n            </CardBody>\r\n            <CardFooter>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                size=\"sm\"\r\n                onClick={handleSubmit}\r\n              >\r\n                {loadingSubmit ? <Spinner size=\"sm\" /> : \"ثبت امتیاز محصول\"}\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <CardHeader>\r\n              <Row>\r\n                <Col xs=\"2\">\r\n                  <i className=\"fa fa-align-justify\"></i>\r\n                  <span style={{ marginRight: \"5px\" }}>\r\n                    لیست همه امتیاز دهی محصولات\r\n                  </span>\r\n                </Col>\r\n                <Col xs=\"4\">\r\n                  <FormGroup row>\r\n                    <Label htmlFor=\"Maincategory\">دسته اصلی</Label>\r\n                    <Col sm={10}>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"Maincategory\"\r\n                        id=\"Maincategory\"\r\n                        onChange={handleMainSurvey}\r\n                      >\r\n                        <option></option>\r\n                        {mainCategoryFromServer.map((item, index) => (\r\n                          <option key={item._id} value={item._id}>\r\n                            {item.name}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </Col>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Table striped responsive size=\"sm\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>زیر دسته</th>\r\n                    <th>نمایش امتیاز محصولات</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {resultSubCategoryFromServer.map((item, index) => (\r\n                    <tr key={item._id}>\r\n                      <td>{item.name}</td>\r\n                      <td>\r\n                        <Col\r\n                          xs=\"6\"\r\n                          className={Classes.clickShowSurvey}\r\n                          onClick={() => setChange(item._id)}\r\n                        >\r\n                          نمایش معیار امتیاز دهی\r\n                        </Col>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Modal\r\n        isOpen={success}\r\n        toggle={toggleSuccess}\r\n        className={\"modal-success \" + props.className}\r\n      >\r\n        <ModalHeader toggle={toggleSuccess}>مشخصات امتیاز محصولات</ModalHeader>\r\n        <ModalBody>\r\n          {resultSurvey.map((item, index) => (\r\n            <Row>\r\n              <Col xs=\"6\">\r\n                <FormGroup>\r\n                  <Label htmlFor=\"titleSurvey\">عنوان امتیاز</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={item.name}\r\n                    id={item._id}\r\n                    value={item.name}\r\n                    disabled\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col xs=\"6\">\r\n                {\" \"}\r\n                <FormGroup>\r\n                  <Label htmlFor=\"titleSurvey\">توضیحات امتیاز</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name={item.label}\r\n                    id={item._id}\r\n                    value={item.label}\r\n                    disabled\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addsurvey;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"shop_box__3Mwmg\",\"boxDetails\":\"shop_boxDetails__2kgE0\",\"addFile\":\"shop_addFile__37LwN\",\"inputFile\":\"shop_inputFile__3lpc-\",\"addImage\":\"shop_addImage__1-zhu\",\"centercontain\":\"shop_centercontain__fSY7B\",\"imageBrand\":\"shop_imageBrand__TdbEX\",\"mediasection\":\"shop_mediasection__2rsln\",\"btnAddSurvey\":\"shop_btnAddSurvey__2h8W-\",\"removeSurvey\":\"shop_removeSurvey__2VLWm\",\"clickShowSurvey\":\"shop_clickShowSurvey__2uCkn\"};"],"sourceRoot":""}