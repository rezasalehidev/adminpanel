{"version":3,"sources":["views/Slider/slider.js","views/Media/allmedia.module.css","views/Order/order.module.css","views/Media/Library.js"],"names":["Slider","useState","title","setTitle","defaultCheck","setDefaultCheck","status","setStatus","success","setSuccess","image","setImage","imageFromServer","setImageFromServer","allSliders","setAllSliders","handleDefault","e","toggleSuccess","useEffect","axios","url","method","data","query","then","res","getAllSlider","map","item","flag","catch","err","console","log","className","xs","row","type","placeholder","onChange","target","value","htmlFor","id","name","style","marginRight","md","marginTop","Classes","addFile","block","color","onClick","display","index","position","width","key","top","cursor","copyImage","indexOF","findIndex","splice","removeImage","src","process","dir","alt","arr","push","variables","imageId","default","addslider","message","toast","setTimeout","addImage","responsive","hover","copyImageFromServer","removeImageEdit","length","checked","copyAllSliders","_id","sliderId","getOneSlider","editSlider","updateSlider","warn","submitEdit","indexOf","deleteSlider","error","removeSlider","module","exports","Library","props","images","arrayHolder","setArrayHolder","loading","setLoading","search","setSearch","page","limit","getAllMultimedia","isOpen","toggle","addonType","event","filter","itemData","toLowerCase","searchData","ModalAllMediaSection","animation","size","ModalMediaSection","alldata","newData","changeStatus","checkBox"],"mappings":"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","file":"static/js/65.b2f49764.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n  CardFooter,\r\n  Button,\r\n  Input,\r\n  FormGroup,\r\n  Label,\r\n  Table,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport Classes from \"../Order/order.module.css\";\r\nimport Spinner from \"reactstrap/lib/Spinner\";\r\nimport Library from \"../Media/Library\";\r\n\r\nconst Slider = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [defaultCheck, setDefaultCheck] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [orderstatus, setOrderstatus] = useState([]);\r\n  const [status, setStatus] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [image, setImage] = useState([]);\r\n  const [imageFromServer, setImageFromServer] = useState([]);\r\n  const [allSliders, setAllSliders] = useState([]);\r\n\r\n  const addImage = (id, dir) => {\r\n    const copyImage = [...image];\r\n    copyImage.push({\r\n      id: id,\r\n      dir: dir,\r\n    });\r\n    setImage(copyImage);\r\n  };\r\n\r\n  const handleDefault = (e) => {\r\n    setDefaultCheck(!defaultCheck);\r\n  };\r\n\r\n  const toggleSuccess = (e) => {\r\n    setSuccess(!success);\r\n  };\r\n\r\n  const removeImage = (id) => {\r\n    const copyImage = [...image];\r\n    const indexOF = copyImage.findIndex((item) => item.id === id);\r\n    copyImage.splice(indexOF, 1);\r\n    setImage(copyImage);\r\n  };\r\n\r\n  const handleSubmitSlider = () => {\r\n    let arr = [];\r\n    const copyImage = [...image];\r\n    copyImage.map((item) => arr.push(item.id));\r\n\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n        mutation addSlider($name:String!,$imageId:[ID!]!,$default:Boolean){\r\n            addslider(name:$name,imageId:$imageId,default:$default){\r\n              status,\r\n              message\r\n            }\r\n          }\r\n        `,\r\n        variables: {\r\n          name: title,\r\n          imageId: arr,\r\n          default: defaultCheck,\r\n        },\r\n      },\r\n    }).then((res) => {\r\n      const { status, message } = res.data.data.addslider;\r\n      if (status === 200) {\r\n        toast.success(message);\r\n        setStatus(!status);\r\n      } else {\r\n        toast.success(\"خطا در ایجاد اسلایدر\");\r\n      }\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setImage([]);\r\n      setTitle(\"\");\r\n    }, 3000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n            query{\r\n                getAllSlider{\r\n                 _id,\r\n                 name,\r\n                 imageId{\r\n                    _id,\r\n                   name,\r\n                   dir,\r\n                 },\r\n                 default\r\n               }\r\n               }\r\n            `,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        const { getAllSlider } = res.data.data;\r\n        getAllSlider.map((item) => (item.flag = false));\r\n        setAllSliders(getAllSlider);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [status]);\r\n\r\n  const removeSlider = (id) => {\r\n    const copyAllSliders = [...allSliders];\r\n    const indexOf = copyAllSliders.findIndex((item) => item._id === id);\r\n    copyAllSliders.splice(indexOf, 1);\r\n    setAllSliders(copyAllSliders);\r\n\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n            mutation deleteSlider($sliderId:ID!){\r\n                deleteSlider(sliderId:$sliderId){\r\n                  status,\r\n                  message\r\n                }\r\n              }\r\n            `,\r\n        variables: {\r\n          sliderId: id,\r\n        },\r\n      },\r\n    }).then((res) => {\r\n      const { status, message } = res.data.data.deleteSlider;\r\n      if (status === 200) {\r\n        toast.success(message);\r\n      } else {\r\n        toast.error(\"خطا در حذف اسلایدر\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const editSlider = (id) => {\r\n    const copyAllSliders = [...allSliders];\r\n    const index = copyAllSliders.findIndex((item) => item._id === id);\r\n    copyAllSliders[index].flag = true;\r\n    setAllSliders(copyAllSliders);\r\n\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n            query getOneSlider($sliderId:ID!){\r\n                getOneSlider(sliderId:$sliderId){\r\n                  _id,\r\n                  name,\r\n                  imageId{\r\n                    _id,\r\n                    dir\r\n                  },\r\n                  default\r\n                }\r\n              }\r\n            `,\r\n        variables: {\r\n          sliderId: id,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        const { getOneSlider } = res.data.data;\r\n        setTitle(getOneSlider[0].name)\r\n        setDefaultCheck(getOneSlider[0].default)\r\n        const arr = [];\r\n        getOneSlider.map((item) =>\r\n          item.imageId.map((image) =>\r\n            arr.push({ id: image._id, dir: image.dir })\r\n          )\r\n        );\r\n        setImageFromServer(arr);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const removeImageEdit = (id) => {\r\n    const copyImageFromServer = [...imageFromServer];\r\n    const indexOF = copyImageFromServer.findIndex((item) => item === id);\r\n    copyImageFromServer.splice(indexOF, 1);\r\n    setImageFromServer(copyImageFromServer);\r\n  };\r\n\r\n  const submitEdit = (id) => {\r\n    const arr = []\r\n    imageFromServer.map((item)=>arr.push(item.id))\r\n\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n              mutation updateSlider($sliderId:ID!,$name:String!,$image:[ID],$default:Boolean){\r\n                updateSlider(sliderId:$sliderId,name:$name,image:$image,default:$default){\r\n                  status,\r\n                  message\r\n                }\r\n              }\r\n              `,\r\n        variables: {\r\n          sliderId: id,\r\n          name: title,\r\n          image: arr,\r\n          default: defaultCheck,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        const { status, message } = res.data.data.updateSlider;\r\n        if (status === 200) {\r\n          toast.success(message);\r\n          const copyAllSliders = [...allSliders];\r\n          const index = copyAllSliders.findIndex((item) => item._id === id);\r\n          copyAllSliders[index].flag = false;\r\n          setAllSliders(copyAllSliders);\r\n        } else {\r\n          toast.warn(\"خطا در آپدیت اسلایدر\");\r\n        }\r\n        \r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <ToastContainer />\r\n      <Row>\r\n        <Col xs=\"12\">\r\n          <Card>\r\n            <CardHeader>اسلایدر ها</CardHeader>\r\n            <CardBody>\r\n              <FormGroup row>\r\n                <Col xs=\"4\">\r\n                  <Label>عنوان</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"عنوان اسلایدر را وارد نمائید\"\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n                </Col>\r\n                <Col xs=\"4\" className=\"mt-4\">\r\n                  <Label htmlFor=\"check\">تعیین به عنوان حالت پیش فرض</Label>\r\n                  <Input\r\n                    id=\"check\"\r\n                    name=\"check\"\r\n                    type=\"checkbox\"\r\n                    onChange={handleDefault}\r\n                    style={{ marginRight: \"10px\" }}\r\n                  />\r\n                </Col>\r\n                <Col xs=\"6\" md=\"3\" style={{ marginTop: \"20px\" }}>\r\n                  <div className={Classes.addFile}>\r\n                    <Button block color=\"primary\" onClick={toggleSuccess}>\r\n                      انتخاب تصویر\r\n                    </Button>\r\n                  </div>\r\n                </Col>\r\n                <Col md=\"12\" xs=\"12\" style={{ display: \"flex\" }}>\r\n                  {image.map((item, index) => (\r\n                    <div\r\n                      style={{ position: \"relative\", width: \"200px\" }}\r\n                      key={index}\r\n                      className=\"mx-2 my-2\"\r\n                    >\r\n                      <span\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          top: \"-24px\",\r\n                          cursor: \"pointer\",\r\n                          color: \"red\",\r\n                        }}\r\n                        onClick={() => removeImage(item.id)}\r\n                      >\r\n                        <i className=\"fa fa-remove fa-lg mt-4\"></i>\r\n                      </span>\r\n                      <img\r\n                        src={`${process.env.REACT_APP_BASE_URL}${item.dir}`}\r\n                        alt={item.dir}\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </Col>\r\n              </FormGroup>\r\n            </CardBody>\r\n            <CardFooter>\r\n              <Button className=\"btn-success\" onClick={handleSubmitSlider}>\r\n                ثبت اسلایدر\r\n              </Button>\r\n            </CardFooter>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      {success ? (\r\n        <Library\r\n          success={success}\r\n          toggleSuccess={toggleSuccess}\r\n          addImage={addImage}\r\n        />\r\n      ) : null}\r\n\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <CardHeader>\r\n              <i className=\"fa fa-align-justify\"></i>همه اسلایدر ها\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Table responsive hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>نام اسلایدر</th>\r\n                    <th>تعداد تصویر</th>\r\n                    <th>وضعیت</th>\r\n                    <th>عملیات</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {allSliders.map((item, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>\r\n                          {item.flag ? (\r\n                            <Input\r\n                              type=\"text\"\r\n                              placeholder=\"عنوان اسلایدر را وارد نمائید\"\r\n                              onChange={(e) => setTitle(e.target.value)}\r\n                              value={title}\r\n                            />\r\n                          ) : (\r\n                            item.name\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {item.flag ? (\r\n                            <Col md=\"6\" xs=\"6\">\r\n                              {imageFromServer.map((item, index) => (\r\n                                <div\r\n                                  style={{\r\n                                    position: \"relative\",\r\n                                    width: \"200px\",\r\n                                  }}\r\n                                  key={index}\r\n                                  className=\"mx-2 my-2\"\r\n                                >\r\n                                  <span\r\n                                    style={{\r\n                                      position: \"absolute\",\r\n                                      top: \"-24px\",\r\n                                      cursor: \"pointer\",\r\n                                      color: \"red\",\r\n                                    }}\r\n                                    onClick={() => removeImageEdit(item.id)}\r\n                                  >\r\n                                    <i className=\"fa fa-remove fa-lg mt-4\"></i>\r\n                                  </span>\r\n                                  <img\r\n                                    src={`${process.env.REACT_APP_BASE_URL}${item.dir}`}\r\n                                    alt={item.dir}\r\n                                    style={{ width: \"100%\" }}\r\n                                  />\r\n                                </div>\r\n                              ))}\r\n                            </Col>\r\n                          ) : (\r\n                            item.imageId.length\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {item.flag ? (\r\n                            <Col xs=\"6\" className=\"mt-4\">\r\n                              <Label htmlFor=\"checkedit\">پیش فرض</Label>\r\n                              <Input\r\n                                id=\"checkedit\"\r\n                                name=\"checkedit\"\r\n                                type=\"checkbox\"\r\n                                onChange={handleDefault}\r\n                                checked={defaultCheck}\r\n                                style={{ marginRight: \"10px\" }}\r\n                              />\r\n                            </Col>\r\n                          ) : item.default ? (\r\n                            <Badge color=\"success\">پیش فرض</Badge>\r\n                          ) : (\r\n                            <Badge color=\"warning\">عادی</Badge>\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          <Button\r\n                            color=\"primary\"\r\n                            onClick={() => editSlider(item._id)}\r\n                          >\r\n                            {item.flag ? (\r\n                              <i\r\n                                className=\"fa fa-edit fa-lg\"\r\n                                onClick={() => submitEdit(item._id)}\r\n                              ></i>\r\n                            ) : (\r\n                              \"ویرایش\"\r\n                            )}\r\n                          </Button>\r\n                          <Button\r\n                            color=\"danger\"\r\n                            style={{ marginRight: \"5px\" }}\r\n                            onClick={() => removeSlider(item._id)}\r\n                          >\r\n                            حذف\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllMediaSection\":\"allmedia_AllMediaSection__3ovEx\",\"mediaSection\":\"allmedia_mediaSection__3t4et\",\"ModalAllMediaSection\":\"allmedia_ModalAllMediaSection__3QNCD\",\"ModalMediaSection\":\"allmedia_ModalMediaSection__3ZW3Q\",\"checkBox\":\"allmedia_checkBox__3p3Br\",\"BoxImage\":\"allmedia_BoxImage__2a8Kd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BOXimage\":\"order_BOXimage__1NEWP\",\"addFile\":\"order_addFile__2epp0\",\"label\":\"order_label__2Y9LP\",\"inputFile\":\"order_inputFile__3wse7\",\"WraperImage\":\"order_WraperImage__n7S-P\",\"txt\":\"order_txt__J4tI6\",\"cardBoDy\":\"order_cardBoDy__3h500\",\"BoxWraper\":\"order_BoxWraper__3_3zq\",\"mainWraper\":\"order_mainWraper__3Jt85\",\"isActive\":\"order_isActive__w8rxY\"};","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Col,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Input,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Modal,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport Classes from \"./allmedia.module.css\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"reactstrap/lib/Spinner\";\r\n\r\nconst Library = (props) => {\r\n  const [images, setImage] = useState([]);\r\n  const [arrayHolder, setArrayHolder] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const filterSearch = (event) => {\r\n    setSearch(event.target.value);\r\n    const value = arrayHolder.filter((item) => {\r\n      const itemData = item.name.toLowerCase();\r\n      const searchData = event.target.value.toLowerCase();\r\n      return itemData.indexOf(searchData) > -1;\r\n    });\r\n    setImage(value);\r\n  };\r\n\r\n  const changeStatus = (id) => {\r\n    const alldata = [...images];\r\n    const newData = alldata.filter((item) => item._id === id);\r\n    newData[0].checked = !newData[0].checked;\r\n    setImage(alldata);\r\n  };\r\n\r\n\r\n  const { toggleSuccess, success, addImage } = props;\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      url: \"/\",\r\n      method: \"post\",\r\n      data: {\r\n        query: `\r\n            query getAllMultimedia($page:Int,$limit:Int){\r\n                getAllMultimedia(page :$page , limit :$limit){\r\n                  _id,\r\n                  name,\r\n                  dir,\r\n                  format,\r\n                  dimWidth,\r\n                  dimHeight,\r\n                  createdAt\r\n                }\r\n              },\r\n            `,\r\n        variables: {\r\n          page: 1,\r\n          limit: 50,\r\n        },\r\n      },\r\n    })\r\n      .then((res) => {\r\n        const { getAllMultimedia } = res.data.data;\r\n        for (let index = 0; index < getAllMultimedia.length; index++) {\r\n          const element = getAllMultimedia[index];\r\n          element.checked = false;\r\n        }\r\n        setImage(getAllMultimedia);\r\n        setArrayHolder(getAllMultimedia);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <Modal\r\n        isOpen={success}\r\n        toggle={toggleSuccess}\r\n        className={\"modal-lg \" + props.className}\r\n      >\r\n        <ModalHeader toggle={toggleSuccess}>\r\n          <Row>\r\n            <Col md=\"12\" xs=\"10\">\r\n              <InputGroup>\r\n                <InputGroupAddon addonType=\"append\">\r\n                  <InputGroupText>جستجو تصویر</InputGroupText>\r\n                </InputGroupAddon>\r\n                <Input\r\n                  placeholder=\"جستجو کنید.....\"\r\n                  value={search}\r\n                  onChange={filterSearch}\r\n                />\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className={Classes.ModalAllMediaSection}>\r\n            {loading ? (\r\n              <Spinner animation=\"grow\" size=\"sm\" />\r\n            ) : (\r\n              images.map((item, index) => (\r\n                <div className={Classes.ModalMediaSection} key={item._id}>\r\n                  <label\r\n                    htmlFor={`imageCheckBox${index}`}\r\n                    onChange={() => {\r\n                      addImage(item._id, item.dir);\r\n                      changeStatus(item._id);\r\n                    }}\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className={Classes.checkBox}\r\n                      id={`imageCheckBox${index}`}\r\n                    />\r\n\r\n                    <img\r\n                      src={`${process.env.REACT_APP_BASE_URL}${item.dir}`}\r\n                      alt={item.dir}\r\n                      name={`imageCheckBox${index}`}\r\n                    />\r\n                  </label>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n"],"sourceRoot":""}